{"version":3,"sources":["logo.svg","App.jsx","index.js"],"names":["App","useState","photos","setPhotos","fetching","setFetching","currentPage","setCurrentage","totalCount","setTotalCount","scrollHandler","e","console","log","target","documentElement","scrollHeight","scrollTop","window","innerHeight","length","useEffect","document","addEventListener","removeEventListener","axios","get","then","respons","prevState","data","headers","finally","className","src","logo","alt","map","photo","id","albumId","title","thumbnailUrl","ReactDOM","render","StrictMode","getElementById"],"mappings":"mNAAe,MAA0B,iC,gCCyF1BA,MApFf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAqCJ,mBAAS,GAA9C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAoCN,mBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAIMC,EAAgB,SAACC,GACrBC,QAAQC,IAAI,cAAeL,GAEvBG,EAAEG,OAAOC,gBAAgBC,cAAgBL,EAAEG,OAAOC,gBAAgBE,UAAYC,OAAOC,aAAe,KACnGjB,EAAOkB,OAASZ,IACnBI,QAAQC,IAAI,iBACZR,GAAY,KAqChB,OAhCAgB,qBAAU,WAGR,OAFAT,QAAQC,IAAI,qBACZS,SAASC,iBAAiB,SAAUb,GAC7B,WACLE,QAAQC,IAAI,wBACZS,SAASE,oBAAoB,SAAWd,OAM5CW,qBACE,WACMjB,GAEFqB,IAAMC,IAAN,sEAAyEpB,IACtEqB,MAAK,SAAAC,GACJrB,GAAc,SAAAsB,GAAS,OAAIA,EAAY,KACvC1B,EAAU,GAAD,mBAAKD,GAAL,YAAgB0B,EAAQE,QACjCrB,EAAcmB,EAAQG,QAAR,qBAGfC,SAAQ,WACP3B,GAAY,SAUpB,sBAAK4B,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,kKACyB,uBADzB,yGAIA,qBAAKF,IAAKC,EAAMF,UAAU,WAAWG,IAAI,YAE3C,sBAAKH,UAAU,YAAf,UACE,iHACA,6BACG/B,EAAOmC,KACN,SAACC,GACC,OACE,qBAAIL,UAAU,OAAd,UAEE,sBAAKA,UAAU,UAAf,UAA0BK,EAAMC,GAAhC,IAAqCD,EAAME,WAC3C,qBAAKP,UAAU,aAAf,SAA6BK,EAAMG,QACnC,qBAAKP,IAAKI,EAAMI,aAAcN,IAAI,gBAJVE,EAAMC,GAAKD,EAAMG,mBClE3DE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASwB,eAAe,W","file":"static/js/main.93973c9e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [photos, setPhotos] = useState([])\n  const [fetching, setFetching] = useState(true)\n  const [currentPage, setCurrentage] = useState(1)\n  const [totalCount, setTotalCount] = useState(0)\n\n\n  \n  const scrollHandler = (e) => {\n    console.log(\"totalCount \", totalCount)\n\n    if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 222\n      && photos.length < totalCount) {\n      console.log(\"scrollHandler\")\n      setFetching(true)\n    \n    }\n  }\n\n  useEffect(() => {\n    console.log(\"addEventListener \")\n    document.addEventListener(\"scroll\", scrollHandler) // и незабываем удалить этот слушатель\n    return function () {\n      console.log(\"removeEventListener \")\n      document.removeEventListener(\"scroll\",  scrollHandler)\n    }\n  }//,[]убираем массив зависимостей так как реакт против\n  )\n\n\n  useEffect(\n    () => {\n      if (fetching) {\n \n        axios.get(`https://jsonplaceholder.typicode.com/photos?_limit=10&_page=${currentPage}`)\n          .then(respons => {\n            setCurrentage(prevState => prevState + 1)\n            setPhotos([...photos, ...respons.data])\n            setTotalCount(respons.headers[`x-total-count`])\n\n          }) // создаем новый массив в него развораичаем старый масссив и добавляем новый массив разворачиая его\n          .finally(() => {\n            setFetching(false)\n          })\n      }\n    }//, [fetching] убираем массив зависимостей так как реакт против\n  )\n\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>\n          Динамическая пагинация <br></br>\n         (подгрузка страниц)\n        </h1>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <div className=\"page-list\">\n        <h2>Список страниц</h2>\n        <ul>\n          {photos.map(\n            (photo) => {\n              return (\n                <li className=\"page\" key={photo.id + photo.title}>\n\n                  <div className=\"page-id\">{photo.id} {photo.albumId}</div>\n                  <div className=\"page-title\">{photo.title}</div>\n                  <img src={photo.thumbnailUrl} alt=\"page icon\"></img>\n                </li>\n              )\n            }\n          )\n\n          }\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}